@use './_variables' as v;
@use './_utils' as utils;
@use './_layouts' as layouts;
@use './_semantics' as a11y;
@use './opinionated' as opinionated;
@use 'sass:map';

$light-theme: (
	primary: #{v.$blue-500},
	primary-hover: #{v.$blue-700},
	accent: #{v.$pink-500},
	bg: #{v.$gray-100},
	surface: #{v.$white},
	surface-alt: #{v.$gray-100},
	text: #{v.$gray-900},
	text-muted: #{v.$gray-600},
	heading: #{v.$gray-950},
	border: #{v.$gray-200},
	divider: #{v.$gray-300},
	success: #{v.$green-600},
	warning: #{v.$amber-500},
	danger: #{v.$red-600},
	focus-ring: #{v.$blue-300},
	button-text: #{v.$black}
);

$dark-theme: (
	primary: #{v.$blue-300},
	primary-hover: #{v.$blue-200},
	accent: #{v.$pink-300},
	bg: #{v.$gray-950},
	surface: #{v.$gray-900},
	surface-alt: #{v.$gray-800},
	text: #{v.$gray-100},
	text-muted: #{v.$gray-400},
	heading: #{v.$gray-50},
	border: #{v.$gray-700},
	divider: #{v.$gray-800},
	success: #{v.$green-400},
	warning: #{v.$amber-300},
	danger: #{v.$red-400},
	focus-ring: #{v.$blue-600},
	button-text: #{v.$black}
);

@mixin declare-schemes-basic(
	$custom-light-theme: (),
	$custom-dark-theme: (),
	$color-prefix: '--color'
) {
	// Merge with default themes
	$merged-light: map.merge($light-theme, $custom-light-theme);
	$merged-dark: map.merge($dark-theme, $custom-dark-theme);

	// Media-query-based automatic color scheme
	@media (prefers-color-scheme: light) {
		@include utils.declare-scoped-vars('[data-prefers-color-scheme]', $merged-light, $color-prefix);
	}

	@media (prefers-color-scheme: dark) {
		@include utils.declare-scoped-vars('[data-prefers-color-scheme]', $merged-dark, $color-prefix);
	}

	@include utils.declare-scoped-vars(
		"[data-prefers-color-scheme][data-compel-color-scheme='light']",
		$merged-light,
		$color-prefix
	);

	@include utils.declare-scoped-vars(
		"[data-prefers-color-scheme][data-compel-color-scheme='dark']",
		$merged-dark,
		$color-prefix
	);
}

@mixin colored-svg-mask($svg-url, $color, $size: 100%, $background-position: center) {
	width: $size;
	height: $size;

	background-position: $background-position;
	background-color: $color;
	position: relative;

	&:hover {
		&::after {
			content: '';
			background-color: $color;
			position: absolute;
			inset: 0;
			background-color: var(--color-success);
		}
	}

	-webkit-mask-image: url(#{$svg-url});
	mask-image: url(#{$svg-url});
	-webkit-mask-repeat: no-repeat;
	mask-repeat: no-repeat;
	-webkit-mask-position: center;
	mask-position: center;
	-webkit-mask-size: contain;
	mask-size: contain;

	overflow: visible;
}

@mixin define-base($color-prefix: '--color') {
	.base {
		background-color: var(#{$color-prefix}-bg);
		color: var(#{$color-prefix}-text);
	}
}

@mixin impose-schemes-basic($color-prefix: '--color') {
	/* Basic text & block elements to paint */
	/*
  @include opinionated.no-default(
  div, p, ul, ol, li, blockquote, main, section, aside,
  h1, h2, h3, h4, h5, h6,
  a, button, input, textarea) {}
  */

	.base {
		background-color: var(#{$color-prefix}-bg);
		color: var(#{$color-prefix}-text);
	}

	// Surface elements: cards, panels, modals, etc.
	// .surface,
	// .card,
	// .panel,
	// .modal {
	// 	background-color: var(#{$color-prefix}-surface);
	// 	color: var(#{$color-prefix}-text);
	// 	border: 1px solid var(#{$color-prefix}-border);
	// }

	// Alternate surface for highlights or nested panels
	// .surface-alt,
	// .panel-alt {
	// 	background-color: var(#{$color-prefix}-surface-alt);
	// 	color: var(#{$color-prefix}-text-muted);
	// 	border: 1px solid var(#{$color-prefix}-divider);
	// }

	// Headings with their own color variable
	// @include opinionated.no-default(h1, h2, h3, h4, h5, h6) {
	// 	color: var(#{$color-prefix}-heading);
	// }

	// Muted text (less important info)
	// .text-muted {
	// 	color: var(#{$color-prefix}-text-muted);
	// }
	//
	// // Success, warning, danger helpers
	// .text-success {
	// 	color: var(#{$color-prefix}-success);
	// }
	//
	// .text-warning {
	// 	color: var(#{$color-prefix}-warning);
	// }
	//
	// .text-danger {
	// 	color: var(#{$color-prefix}-danger);
	// }

	// Borders and dividers (horizontal rules, etc.)
	// hr,
	// .divider {
	// 	border-color: var(#{$color-prefix}-divider);
	// }
}

@mixin impose-interactive() {
	// Links and interactive elements
	a,
	button,
	input[type='submit'],
	input[type='button'],
	.btn {
		color: var(#{$color-prefix}-primary);
		background-color: transparent;
		border: none;
		cursor: pointer;
		transition:
			color 0.2s ease,
			background-color 0.2s ease;
		border-radius: v.$card-radius;

		&:hover,
		&:focus {
			color: var(#{$color-prefix}-primary-hover);

			background-color: var(#{$color-prefix}-surface-alt);

			&:focus-visible {
				outline-color: var(#{$color-prefix}-focus-ring);
				outline-style: solid;
				outline-width: 2px;
				outline-offset: 2px;
			}
		}
	}
}

@mixin impose-scroll-scheme() {
	.scroll-scheme {
		overflow: auto;
		scroll-behavior: smooth;

		&::-webkit-scrollbar {
			width: 12px;
			height: 12px;
		}

		&::-webkit-scrollbar-track {
			background: var(--color-surface-alt);
		}

		&::-webkit-scrollbar-thumb {
			background-color: var(--color-primary);
			border-radius: 6px;
			border: 3px solid var(--color-surface-alt);
		}

		&::-webkit-scrollbar-thumb:hover {
			background-color: var(--color-primary-hover);
		}

		scrollbar-width: thin;

		@include layouts.respond('2xl') {
			& {
				scrollbar-width: auto;
			}
		}

		& {
			scrollbar-color: var(--color-primary) var(--color-surface-alt);
		}
	}
}
